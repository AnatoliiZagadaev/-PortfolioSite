import React from "react";


class IdGenerator {
    static id = 3;
    static next() {
    return ++this.id;
  }
}

export default class FormOfPerson extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      isOpen: !!props.Person,
      item: props.Person ? { ...props.Person } : { firstName:'', surname:'', age:' ', gender:''}
      
    };
    this.addHandler = this.addHandler.bind(this);
    this.saveHandler = this.saveHandler.bind(this);
    this.handleChangeFirstName = this.handleChangeFirstName.bind(this);
    this.handleChangeSurenane = this.handleChangeSurenane.bind(this);
    this.handleChangeAge = this.handleChangeAge.bind(this);
    this.handleChangeGender =this.handleChangeGender.bind(this);
  }

  componentDidUpdate(prevProp) {
    if (prevProp.Person !== this.props.Person) {
      this.setState({
        isOpen: !!this.props.Person,
        item: this.props.Person
          ? { ...this.props.Person }
          : {firstName:'', surname:'', age:' ', gender:'' }
      });
    }
  }

  addHandler() {
    this.props.add({ ...this.state.item, id: IdGenerator.next() });
    this.setState({ isOpen: false, item: {firstName:'', surname:'', age:' ', gender:'' } });
  }

  saveHandler() {
    this.props.save(this.state.item);
    this.setState({ isOpen: false, item: {firstName:'', surname:'', age:' ', gender:'' } });
  }
  handleChangeFirstName(event) {
    this.setState({item: {...this.state.item, firstName: event.target.value}});
 }
 handleChangeSurenane(event){
    this.setState({item: {...this.state.item, surname: event.target.value}});
    }
    handleChangeGender(event){
    this.setState({item: {...this.state.item, gender:event.target.value}});
    }
    handleChangeAge(event){
    this.setState({item: {...this.state.item,age:event.target.value}});
    }
 
  render() {
    return (
      <div>
        <button onClick={() => this.setState({ isOpen: true })}>
          Add Person
        </button>

        {this.state.isOpen && (
        <section>
            <header id="Personal details"><h1>Personal details</h1></header>
             <span className="containerForm">
             <span className="wrapper">
              <input ref={this.nameInput}onChange={this.handleChangeFirstName}value={this.state.item.firstName}type="text"/>
              <input ref={this.sunameInput} onChange={this.handleChangeSurenane} value={this.state.item.surname} type="number"/>
              <br/>
          </span>
          <span className="wrapper">
              <select ref={this.genderInput} value={this.state.item.gender} onChange={this.handleChangeGender} id="gender">
                  <option >--Gender--</option>
                  <option value="male">Male</option>
                  <option value="female">Female</option>
              </select>
              <input ref={this.ageInput} type="number" value={this.state.item.age} id="birthdate" name="birthdate" placeholder="Age"onChange={this.handleChangeAge}/>
          </span>
              {!this.state.item.id && (
                <button onClick={this.addHandler}>Add</button>
              )}
              {this.state.item.id && (
                <button onClick={this.saveHandler}>Save</button>
              )}
              </span>
        </section> 
        )}
      </div>
    );
  }
}
/*Person:{
    id:'',
      firstName:'',
      surname:'',
      age:' ',
    gender:''
  },
  DataPerson:[]
};


this.handleChangeFirstName = this.handleChangeFirstName.bind(this);
this.handleChangeSurenane = this.handleChangeSurenane.bind(this);
this.handleChangeAge = this.handleChangeAge.bind(this);
this.handleChangeGender =this.handleChangeGender.bind(this);
this.handleSubmit = this.handleSubmit.bind(this);

}
handleChangeFirstName(event) {
this.setState(({Person}) => ({Person: {...Person, firstName: event.target.value}}));
}
handleChangeSurenane(event){
this.setState(({Person}) => ({Person: {...Person, surname: event.target.value}}));
}
handleChangeGender(event){
this.setState(({Person}) => ({Person: {...Person, gender:event.target.value}}));
}
handleChangeAge(event){
this.setState(({Person}) => ({Person: {...Person,age:event.target.value}}));
}
handleSubmit(event) {
event.preventDefault();
this.setState(this.state.Person);
const DataPerson=[this.state.Person]
this.setState({DataPerson: DataPerson}) 
this.state.DataPerson.push(DataPerson);

}
//console.log( this.state.Person,this.DataPerson)

render(){
return(
 <section>
<header id="Personal details"><h1>Personal details</h1></header>
 <span className="containerForm">
  <form  onSubmit={this.handleSubmit}   action="#" method="post" id="regform" name="regform"/>

      <span className="block">
          <h2>Personal details</h2>
          <span className="wrapper">
              <input type="text" value={this.state.Person.firstName} id="firstname" name="firstname" placeholder="Name"  onChange={this.handleChangeFirstName}/>
              <input type="text" value={this.state.Person.surname} id="surname" name="surname" placeholder="Surname"  onChange={this.handleChangeSurenane}/>
               <br/>
          </span>
          <span className="wrapper">
              <select value={this.state.Person.gender} onChange={this.handleChangeGender} id="gender">
                  <option >--Gender--</option>
                  <option value="male">Male</option>
                  <option value="female">Female</option>
              </select>
              <input type="number" value={this.state.Person.age} id="birthdate" name="birthdate" placeholder="Age"  onChange={this.handleChangeAge}/>
          </span>
          <span className="wrapper">
              <input  onClic={console.log(this.state.DataPerson,this.state.Person)} type="submit" className="button" value="submit"/>
          </span>
      </span>
  <form/>
  <hr/>
</span>
<div>
<EditableTable columns={columns} rows={this.state.DataPerson} actions />
</div>
</section>*/ 